module Interface.PropertyManager.Service where

import Interface.Base.Service qualified as Base (I, Implementation)

import Interface.PropertyManager.Choices.RequestCreateApartmentProperty qualified as RequestCreateApartmentProperty(I)
import Interface.PropertyManager.Choices.RequestCreateLandProperty qualified as RequestCreateLandProperty(I)
import Interface.PropertyManager.Choices.RequestCreateResidenceProperty qualified as RequestCreateResidenceProperty(I)
import Interface.PropertyManager.Choices.RequestCreateGarageProperty qualified as RequestCreateGarageProperty(I)
import Interface.PropertyManager.Choices.RequestCreateWarehouseProperty qualified as RequestCreateWarehouseProperty(I)
import Interface.PropertyManager.Property.ApartmentProperty.Factory qualified as ApartmentProperty(Factory(..))
import Interface.PropertyManager.Property.LandProperty.Factory qualified as LandProperty(Factory(..))
import Interface.PropertyManager.Property.ResidenceProperty.Factory qualified as ResidenceProperty(Factory(..))
import Interface.PropertyManager.Property.GarageProperty.Factory qualified as GarageProperty(Factory(..))
import Interface.PropertyManager.Property.WarehouseProperty.Factory qualified as WarehouseProperty(Factory(..))

import Interface.Common.Types (PropertyKey(..), PropertyKey(..), PropertyKey(..))
import Interface.PropertyManager.Property.Common (WarehouseType, GarageType, LandType, ViableConstructionTypes, ResidenceType, Parking, Orientation)
import Daml.Finance.Interface.Types.Common.Types (PartiesMap, Id, InstrumentKey)

type I = Service

type O = Offer

type R = Request

data View = View
    with
        apartmentPropertyFactoryCid: ContractId ApartmentProperty.Factory 
        landPropertyFactoryCid: ContractId LandProperty.Factory 
        residencePropertyFactoryCid: ContractId ResidenceProperty.Factory
        garagePropertyFactoryCid: ContractId GarageProperty.Factory
        warehousePropertyFactoryCid: ContractId WarehouseProperty.Factory  
    deriving (Eq, Show)

data OView = OView
  with
    operator : Party
    user : Party
    apartmentPropertyFactoryCid: ContractId ApartmentProperty.Factory
    landPropertyFactoryCid: ContractId LandProperty.Factory 
    residencePropertyFactoryCid: ContractId ResidenceProperty.Factory 
    garagePropertyFactoryCid: ContractId GarageProperty.Factory
    warehousePropertyFactoryCid: ContractId WarehouseProperty.Factory 
  deriving(Eq, Show)

data RView = RView
  with
    operator : Party
    user : Party
  deriving(Eq, Show)

interface Service where
    viewtype View

    asBase : Base.I
    
    requestCreateApartmentProperty : RequestCreateApartmentProperty -> Update (ContractId RequestCreateApartmentProperty.I)
    createApartmentProperty: CreateApartmentProperty -> Update (InstrumentKey,PropertyKey) 

    requestCreateLandProperty : RequestCreateLandProperty -> Update (ContractId RequestCreateLandProperty.I)
    createLandProperty: CreateLandProperty -> Update (InstrumentKey,PropertyKey)

    requestCreateResidenceProperty : RequestCreateResidenceProperty -> Update (ContractId RequestCreateResidenceProperty.I)
    createResidenceProperty: CreateResidenceProperty -> Update (InstrumentKey,PropertyKey)

    requestCreateGarageProperty : RequestCreateGarageProperty -> Update (ContractId RequestCreateGarageProperty.I)
    createGarageProperty: CreateGarageProperty -> Update (InstrumentKey,PropertyKey)

    requestCreateWarehouseProperty : RequestCreateWarehouseProperty -> Update (ContractId RequestCreateWarehouseProperty.I)
    createWarehouseProperty: CreateWarehouseProperty -> Update (InstrumentKey,PropertyKey)

------------------------------------------------

    updateApartment : UpdateApartment -> Update()

    updateLand : UpdateLand -> Update()

    updateResidence : UpdateResidence -> Update()

    updateGarage : UpdateGarage -> Update()

    updateWarehouse : UpdateWarehouse -> Update()

--------------------------------------------------

    nonconsuming choice RequestCreateApartmentProperty : ContractId RequestCreateApartmentProperty.I
      with
          id: Id
          apartmentInstrument: InstrumentKey
          apartmentPrice: Decimal
          propertyAddress: Text
          propertyPostalCode : Text
          propertyDistrict : Text
          propertyCounty : Text
          grossArea: Decimal
          usableArea: Decimal
          bedrooms: Int
          bathrooms: Int
          floor: Int
          parkingSpaces: Int
          elevator: Bool
          buildDate: Date
          installedEquipment: Text
          additionalInformation: Text
          description: Text
          photoReferences:[Text]
          observers : PartiesMap
      controller (view $ asBase this).user
      do
        requestCreateApartmentProperty this arg

    nonconsuming choice CreateApartmentProperty : (InstrumentKey,PropertyKey)
      with
          createApartmentPropertyRequest: ContractId RequestCreateApartmentProperty.I
      controller (view $ asBase this).operator
      do
        createApartmentProperty this arg
    
    nonconsuming choice RequestCreateLandProperty : ContractId RequestCreateLandProperty.I
      with
          id: Id
          landInstrument: InstrumentKey
          landPrice: Decimal
          propertyAddress: Text
          propertyPostalCode : Text
          propertyDistrict : Text
          propertyCounty : Text
          landType: LandType
          totalLandArea: Decimal
          minimumSurfaceForSale: Decimal
          buildableArea: Decimal
          buildableFloors: Int
          accessByRoad: Bool
          installedEquipment: Text
          viableConstructionTypes: [ViableConstructionTypes]
          additionalInformation: Text
          description: Text
          photoReferences:[Text]
          observers : PartiesMap
      controller (view $ asBase this).user
      do
        requestCreateLandProperty this arg

    nonconsuming choice CreateLandProperty : (InstrumentKey,PropertyKey)
      with
          createLandPropertyRequest: ContractId RequestCreateLandProperty.I
      controller (view $ asBase this).operator
      do
        createLandProperty this arg
    
    nonconsuming choice RequestCreateResidenceProperty : ContractId RequestCreateResidenceProperty.I
      with
          id: Id
          residenceInstrument: InstrumentKey
          residencePrice: Decimal
          propertyAddress: Text
          propertyPostalCode : Text
          propertyDistrict : Text
          propertyCounty : Text
          grossArea: Decimal
          usableArea: Decimal
          bedrooms: Int
          bathrooms: Int
          floors: Int
          residenceType: ResidenceType 
          backyard: Text --m^2, frontwards, backwards...
          parking: Parking 
          buildDate: Date
          orientation: Orientation
          installedEquipment: Text
          additionalInformation: Text
          description: Text
          photoReferences:[Text]
          observers : PartiesMap
      controller (view $ asBase this).user
      do
        requestCreateResidenceProperty this arg

    nonconsuming choice CreateResidenceProperty : (InstrumentKey,PropertyKey)
      with
          createResidencePropertyRequest: ContractId RequestCreateResidenceProperty.I
      controller (view $ asBase this).operator
      do
        createResidenceProperty this arg

    nonconsuming choice RequestCreateGarageProperty : ContractId RequestCreateGarageProperty.I
      with
          id: Id
          garageInstrument: InstrumentKey
          garagePrice: Decimal
          propertyAddress: Text
          propertyPostalCode : Text
          propertyDistrict : Text
          propertyCounty : Text
          garageArea: Decimal
          garageType: GarageType
          vehicleCapacity: Int
          installedEquipment: Text
          additionalInformation: Text
          description: Text
          photoReferences:[Text]
          observers : PartiesMap
      controller (view $ asBase this).user
      do
        requestCreateGarageProperty this arg

    nonconsuming choice CreateGarageProperty : (InstrumentKey,PropertyKey)
      with
          createGaragePropertyRequest: ContractId RequestCreateGarageProperty.I
      controller (view $ asBase this).operator
      do
        createGarageProperty this arg

    nonconsuming choice RequestCreateWarehouseProperty : ContractId RequestCreateWarehouseProperty.I
      with
          id: Id
          warehouseInstrument: InstrumentKey
          warehousePrice: Decimal
          propertyAddress: Text
          propertyPostalCode : Text
          propertyDistrict : Text
          propertyCounty : Text
          warehouseType: WarehouseType 
          grossArea: Decimal
          usableArea: Decimal
          floors: Int
          buildDate: Date
          installedEquipment: Text
          additionalInformation: Text
          description: Text
          photoReferences:[Text]
          observers : PartiesMap
      controller (view $ asBase this).user
      do
        requestCreateWarehouseProperty this arg

    nonconsuming choice CreateWarehouseProperty : (InstrumentKey,PropertyKey)
      with
          createWarehousePropertyRequest: ContractId RequestCreateWarehouseProperty.I
      controller (view $ asBase this).operator
      do
        createWarehouseProperty this arg

----------------------
    
    nonconsuming choice UpdateApartment : ()
      with
        newApartmentPrice: Decimal
        newApartmentPropertyAddress: Text
        newApartmentPropertyPostalCode : Text
        newApartmentPropertyDistrict : Text
        newApartmentPropertyCounty : Text
        newApartmentGrossArea: Decimal
        newApartmentUsableArea: Decimal
        newApartmentBedrooms: Int
        newApartmentBathrooms: Int
        newApartmentFloor: Int
        newApartmentParkingSpaces: Int
        newApartmentElevator: Bool
        newApartmentBuildDate: Date
        newApartmentInstalledEquipment: Text
        newApartmentAdditionalInformation: Text 
        newApartmentDescription: Text
        newApartmentPhotoReferences: [Text]
        propertyKey : PropertyKey
      controller (view $ asBase this).user
      do
        updateApartment this arg

----------------------

    nonconsuming choice UpdateLand : ()
      with
        newLandPrice: Decimal
        newLandPropertyAddress: Text
        newLandPropertyPostalCode : Text
        newLandPropertyDistrict : Text
        newLandPropertyCounty : Text
        newLandType: LandType
        newLandTotalArea: Decimal
        newLandMinimumSurfaceForSale: Decimal
        newLandBuildableArea: Decimal
        newLandBuildableFloors: Int
        newLandAccessByRoad: Bool
        newLandInstalledEquipment: Text
        newLandViableConstructionTypes: [ViableConstructionTypes]
        newLandAdditionalInformation: Text 
        newLandDescription: Text
        newLandPhotoReferences: [Text]
        propertyKey : PropertyKey
      controller (view $ asBase this).user
      do
        updateLand this arg

------------------------
    
    nonconsuming choice UpdateResidence : ()
      with
        newResidencePrice : Decimal
        newResidencePropertyAddress : Text
        newResidencePropertyPostalCode : Text
        newResidencePropertyDistrict : Text
        newResidencePropertyCounty : Text
        newResidenceGrossArea : Decimal
        newResidenceUsableArea : Decimal
        newResidenceBedrooms : Int
        newResidenceBathrooms : Int
        newResidenceFloors : Int
        newResidenceType : ResidenceType
        newResidenceBackyard : Text
        newResidenceParking : Parking
        newResidenceBuildDate : Date
        newResidenceOrientation : Orientation
        newResidenceInstalledEquipment : Text
        newResidenceAdditionalInformation : Text
        newResidenceDescription : Text
        newResidencePhotoReferences : [Text]
        propertyKey : PropertyKey
      controller (view $ asBase this).user
      do
        updateResidence this arg
    
-----------------------------------------------------------------------------

    nonconsuming choice UpdateGarage : ()
      with
        newGaragePrice: Decimal
        newGaragePropertyAddress: Text
        newGaragePropertyPostalCode : Text
        newGaragePropertyDistrict : Text
        newGaragePropertyCounty : Text
        newGarageArea: Decimal
        newGarageType: GarageType
        newGarageVehicleCapacity: Int
        newGarageInstalledEquipment: Text
        newGarageAdditionalInformation: Text 
        newGarageDescription: Text
        newGaragePhotoReferences: [Text]
        propertyKey : PropertyKey
      controller (view $ asBase this).user
      do
        updateGarage this arg

----------------------------------------------------------

    nonconsuming choice UpdateWarehouse : ()
      with
        newWarehousePrice : Decimal
        newWarehousePropertyAddress : Text
        newWarehousePropertyPostalCode : Text
        newWarehousePropertyDistrict : Text
        newWarehousePropertyCounty : Text
        newWarehouseType : WarehouseType
        newWarehouseGrossArea : Decimal
        newWarehouseUsableArea : Decimal
        newWarehouseFloors : Int
        newWarehouseBuildDate : Date
        newWarehouseInstalledEquipment : Text
        newWarehouseAdditionalInformation : Text
        newWarehouseDescription : Text
        newWarehousePhotoReferences : [Text]
        propertyKey : PropertyKey
      controller (view $ asBase this).user
      do
        updateWarehouse this arg
 
interface Offer where
  viewtype OView

  accept : Accept -> Update (ContractId Service)
  decline : Decline -> Update ()
  withdraw : Withdraw -> Update ()

  choice Accept : ContractId Service
    controller (view this).user
    do
      accept this arg

  choice Decline : ()
    controller (view this).user
    do
      decline this arg

  choice Withdraw : ()
    controller (view this).operator
    do
      withdraw this arg

interface Request where
  viewtype RView

  cancel : Cancel -> Update ()
  reject : Reject -> Update ()
  approve : Approve -> Update (ContractId Service)

  choice Cancel : ()
    controller (view this).user
    do
      cancel this arg

  choice Reject : ()
    controller (view this).operator
    do
      reject this arg

  choice Approve : ContractId Service
    with
      operator: Party
      apartmentPropertyFactoryCid: ContractId ApartmentProperty.Factory
      landPropertyFactoryCid: ContractId LandProperty.Factory
      residencePropertyFactoryCid: ContractId ResidenceProperty.Factory
      garagePropertyFactoryCid: ContractId GarageProperty.Factory
      warehousePropertyFactoryCid: ContractId WarehouseProperty.Factory 
    controller operator
    do
      approve this arg

type ImplementationService t = (HasToInterface t Service, Base.Implementation t)
class (ImplementationService t) => HasImplementation t
instance HasImplementation Service
instance HasToInterface Service Base.I where _toInterface = asBase