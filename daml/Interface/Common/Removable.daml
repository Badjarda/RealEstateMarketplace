module Interface.Common.Removable where

import Daml.Finance.Interface.Types.Common.Types (Parties)

type I = Removable

type V = View

data View = View
  with
    removers : Parties
  deriving (Eq, Show)

interface Removable where
  viewtype V

  choice Remove : ()
    controller (view this).removers
    do
      pure ()

type Implementation t = HasToInterface t Removable
class (Implementation t) => HasImplementation t
instance HasImplementation Removable