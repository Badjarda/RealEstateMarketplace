module Interface.Common.Util where

import Interface.Common.Removable qualified as Removable (I, Remove(..))

-- | Fetches a contract, removes it and returns its value.
fetchAndRemove : (HasFetch a, HasToInterface a Removable.I) => ContractId a -> Update a
fetchAndRemove cid = do
  c <- fetch cid
  exercise (toInterfaceContractId @Removable.I cid) Removable.Remove
  return c

  