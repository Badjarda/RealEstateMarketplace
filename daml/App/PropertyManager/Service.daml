module App.PropertyManager.Service where

import Interface.PropertyManager.Service qualified as Service(I, R, O, View(..), OView(..), RView(..), RequestCreateApartmentProperty(..), CreateApartmentProperty(..), UpdateApartmentInstrumentKey(..), UpdateApartmentPropertyAddress(..), UpdateApartmentPropertyPostalCode(..), UpdateApartmentPropertyDistrict(..), UpdateApartmentPropertyCounty(..), UpdateApartmentGrossArea(..), UpdateApartmentUsableArea(..), UpdateApartmentBedrooms(..), UpdateApartmentBathrooms(..), UpdateApartmentFloor(..), UpdateApartmentParkingSpaces(..), UpdateApartmentElevator(..), UpdateApartmentBuildDate(..), UpdateApartmentInstalledEquipment(..), UpdateApartmentAdditionalInformation(..), UpdateApartmentDescription(..), RequestCreateLandProperty(..), CreateLandProperty(..), UpdateLandInstrumentKey(..), UpdateLandPropertyAddress(..), UpdateLandPropertyPostalCode(..), UpdateLandPropertyDistrict(..), UpdateLandPropertyCounty(..), UpdateLandType(..), UpdateTotalLandArea(..), UpdateMinimumSurfaceForSale(..), UpdateLandBuildableArea(..), UpdateLandBuildableFloors(..), UpdateLandAccessByRoad(..), UpdateLandInstalledEquipment(..), UpdateLandViableConstructionTypes(..), UpdateLandAdditionalInformation(..), UpdateLandDescription(..), RequestCreateResidenceProperty(..), CreateResidenceProperty(..), UpdateResidenceInstrumentKey(..), UpdateResidencePropertyAddress(..), UpdateResidencePropertyPostalCode(..), UpdateResidencePropertyDistrict(..), UpdateResidencePropertyCounty(..), UpdateResidenceGrossArea(..), UpdateResidenceUsableArea(..), UpdateResidenceBedrooms(..), UpdateResidenceBathrooms(..), UpdateResidenceFloors(..), UpdateResidenceType(..), UpdateResidenceBackyard(..), UpdateResidenceInstalledEquipment(..), UpdateResidenceParking(..), UpdateResidenceBuildDate(..), UpdateResidenceOrientation(..), UpdateResidenceAdditionalInformation(..), UpdateResidenceDescription(..), RequestCreateGarageProperty(..), CreateGarageProperty(..), UpdateGarageInstrumentKey(..), UpdateGaragePropertyAddress(..), UpdateGaragePropertyPostalCode(..), UpdateGaragePropertyDistrict(..), UpdateGaragePropertyCounty(..), UpdateGarageArea(..), UpdateGarageType(..), UpdateVehicleCapacity(..), UpdateGarageInstalledEquipment(..), UpdateGarageAdditionalInformation(..), UpdateGarageDescription(..), RequestCreateWarehouseProperty(..), CreateWarehouseProperty(..), UpdateWarehouseInstrumentKey(..), UpdateWarehousePropertyAddress(..), UpdateWarehousePropertyPostalCode(..), UpdateWarehousePropertyDistrict(..), UpdateWarehousePropertyCounty(..), UpdateWarehouseType(..), UpdateWarehouseGrossArea(..), UpdateWarehouseUsableArea(..), UpdateWarehouseFloors(..), UpdateWarehouseBuildDate(..), UpdateWarehouseInstalledEquipment(..), UpdateWarehouseAdditionalInformation(..), UpdateWarehouseDescription(..), Accept(..), Decline(..), Withdraw(..), Approve(..), Reject(..), Cancel(..))

import Interface.PropertyManager.Property.ApartmentProperty.Factory qualified as ApartmentProperty(Factory(..))
import Interface.PropertyManager.Property.LandProperty.Factory qualified as LandProperty(Factory(..))
import Interface.PropertyManager.Property.ResidenceProperty.Factory qualified as ResidenceProperty(Factory(..))
import Interface.PropertyManager.Property.GarageProperty.Factory qualified as GarageProperty(Factory(..))
import Interface.PropertyManager.Property.WarehouseProperty.Factory qualified as WarehouseProperty(Factory(..))

import Interface.Base.Service qualified as Base (I, View(..))
import Interface.RoleManager.UserRole.Permission

import App.PropertyManager.Util (CreateApartmentPropertyRequest(..), CreateApartmentProperty(..), UpdateApartmentInstrumentKey(..), UpdateApartmentPropertyAddress(..), UpdateApartmentPropertyPostalCode(..), UpdateApartmentPropertyDistrict(..), UpdateApartmentPropertyCounty(..), UpdateApartmentGrossArea(..), UpdateApartmentUsableArea(..), UpdateApartmentBedrooms(..), UpdateApartmentBathrooms(..), UpdateApartmentFloor(..), UpdateApartmentParkingSpaces(..), UpdateApartmentElevator(..), UpdateApartmentBuildDate(..), UpdateApartmentInstalledEquipment(..), UpdateApartmentAdditionalInformation(..), UpdateApartmentDescription(..), requestCreateApartmentPropertyAux, createApartmentPropertyAux, updateApartmentInstrumentKeyAux, updateApartmentPropertyAdressAux, updateApartmentPropertyPostalCodeAux, updateApartmentPropertyDistrictAux, updateApartmentPropertyCountyAux, updateApartmentGrossAreaAux, updateApartmentUsableAreaAux, updateApartmentBedroomsAux, updateApartmentBathroomsAux, updateApartmentFloorAux, updateApartmentParkingSpacesAux, updateApartmentElevatorAux, updateApartmentBuildDateAux, updateApartmentInstalledEquipmentAux, updateApartmentAdditionalInformationAux, updateApartmentDescriptionAux, CreateResidencePropertyRequest(..), CreateResidenceProperty(..), UpdateResidenceInstrumentKey(..), UpdateResidencePropertyAddress(..), UpdateResidencePropertyPostalCode(..), UpdateResidencePropertyDistrict(..), UpdateResidencePropertyCounty(..), UpdateResidenceGrossArea(..), UpdateResidenceUsableArea(..), UpdateResidenceBedrooms(..), UpdateResidenceBathrooms(..), UpdateResidenceFloors(..), UpdateResidenceType(..), UpdateResidenceBackyard(..), UpdateResidenceParking(..), UpdateResidenceBuildDate(..), UpdateResidenceOrientation(..), UpdateResidenceInstalledEquipment(..), UpdateResidenceAdditionalInformation(..), UpdateResidenceDescription(..), requestCreateResidencePropertyAux, createResidencePropertyAux, updateResidenceInstrumentKeyAux, updateResidencePropertyAddressAux, updateResidencePropertyPostalCodeAux, updateResidencePropertyDistrictAux, updateResidencePropertyCountyAux, updateResidenceGrossAreaAux, updateResidenceUsableAreaAux, updateResidenceBedroomsAux, updateResidenceBathroomsAux, updateResidenceFloorsAux, updateResidenceTypeAux, updateResidenceBackyardAux, updateResidenceParkingAux, updateResidenceBuildDateAux, updateResidenceOrientationAux, updateResidenceInstalledEquipmentAux, updateResidenceAdditionalInformationAux, updateResidenceDescriptionAux, CreateLandPropertyRequest(..), CreateLandProperty(..), UpdateLandInstrumentKey(..), UpdateLandPropertyAddress(..), UpdateLandPropertyPostalCode(..), UpdateLandPropertyDistrict(..), UpdateLandPropertyCounty(..), UpdateLandType(..), UpdateTotalLandArea(..), UpdateLandMinimumSurfaceForSale(..), UpdateLandBuildableArea(..), UpdateLandBuildableFloors(..), UpdateLandAccessByRoad(..), UpdateLandViableConstructionTypes(..), UpdateLandInstalledEquipment(..), UpdateLandAdditionalInformation(..), UpdateLandDescription(..), requestCreateLandPropertyAux, createLandPropertyAux, updateLandInstrumentKeyAux, updateLandPropertyAdressAux, updateLandPropertyPostalCodeAux, updateLandPropertyDistrictAux, updateLandPropertyCountyAux, updateLandTypeAux, updateTotalLandAreaAux, updateLandMinimumSurfaceForSaleAux, updateLandBuildableAreaAux, updateLandBuildableFloorsAux, updateLandAccessByRoadAux, updateLandViableConstructionTypesAux, updateLandInstalledEquipmentAux, updateLandAdditionalInformationAux, updateLandDescriptionAux, CreateGarageProperty(..), CreateGaragePropertyRequest(..), UpdateGarageInstrumentKey(..), UpdateGaragePropertyAddress(..), UpdateGaragePropertyPostalCode(..), UpdateGaragePropertyDistrict(..), UpdateGaragePropertyCounty(..), UpdateGarageArea(..), UpdateGarageType(..), UpdateVehicleCapacity(..), UpdateGarageInstalledEquipment(..), UpdateGarageAdditionalInformation(..), UpdateGarageDescription(..), requestCreateGaragePropertyAux, createGaragePropertyAux, updateGarageInstrumentKeyAux, updateGaragePropertyAddressAux, updateGaragePropertyPostalCodeAux, updateGaragePropertyDistrictAux, updateGaragePropertyCountyAux, updateGarageAreaAux, updateGarageTypeAux, updateVehicleCapacityAux, updateGarageInstalledEquipmentAux, updateGarageAdditionalInformationAux, updateGarageDescriptionAux, CreateWarehouseProperty(..), CreateWarehousePropertyRequest(..), UpdateWarehouseInstrumentKey(..), UpdateWarehousePropertyAddress(..), UpdateWarehousePropertyPostalCode(..), UpdateWarehousePropertyDistrict(..), UpdateWarehousePropertyCounty(..), UpdateWarehouseType(..), UpdateWarehouseGrossArea(..), UpdateWarehouseUsableArea(..), UpdateWarehouseFloors(..), UpdateWarehouseBuildDate(..), UpdateWarehouseInstalledEquipment(..), UpdateWarehouseAdditionalInformation(..), UpdateWarehouseDescription(..), requestCreateWarehousePropertyAux, createWarehousePropertyAux, updateWarehouseInstrumentKeyAux, updateWarehousePropertyAddressAux, updateWarehousePropertyPostalCodeAux, updateWarehousePropertyDistrictAux, updateWarehousePropertyCountyAux, updateWarehouseTypeAux, updateWarehouseGrossAreaAux, updateWarehouseUsableAreaAux, updateWarehouseFloorsAux, updateWarehouseBuildDateAux, updateWarehouseInstalledEquipmentAux, updateWarehouseAdditionalInformationAux, updateWarehouseDescriptionAux)

type T = Service

template Service 
  with
    operator: Party
    user: Party
    apartmentPropertyFactoryCid: ContractId ApartmentProperty.Factory
    landPropertyFactoryCid: ContractId LandProperty.Factory
    residencePropertyFactoryCid: ContractId ResidenceProperty.Factory
    garagePropertyFactoryCid: ContractId GarageProperty.Factory
    warehousePropertyFactoryCid: ContractId WarehouseProperty.Factory
  where
  signatory operator, user

  key (operator, user) : (Party, Party)
  maintainer key._1

  interface instance Base.I for Service where
    view = Base.View with operator; user
    terminate = pure ()

  interface instance Service.I for Service where
    view = Service.View with apartmentPropertyFactoryCid, landPropertyFactoryCid, residencePropertyFactoryCid, garagePropertyFactoryCid, warehousePropertyFactoryCid

    asBase = toInterface @Base.I this
 
    requestCreateApartmentProperty Service.RequestCreateApartmentProperty{id,apartmentInstrument,propertyAddress,propertyPostalCode,propertyDistrict,propertyCounty,grossArea,usableArea,bedrooms,bathrooms,floor,parkingSpaces,elevator,buildDate,installedEquipment,additionalInformation,description,observers} = do
      let requestCreateApartmentPropertyParams = CreateApartmentPropertyRequest with permission = MANAGE_ROLE, ..
      requestCreateApartmentPropertyAux requestCreateApartmentPropertyParams

    createApartmentProperty Service.CreateApartmentProperty{createApartmentPropertyRequest} = do
      let createApartmentPropertyParams = CreateApartmentProperty with ..
      createApartmentPropertyAux createApartmentPropertyParams
    
    updateApartmentInstrumentKey Service.UpdateApartmentInstrumentKey{propertyKey, newApartmentInstrumentKey} = do
      let requestUpdateApartmentInstrumentKeyParams = UpdateApartmentInstrumentKey with ..
      updateApartmentInstrumentKeyAux requestUpdateApartmentInstrumentKeyParams

    updateApartmentPropertyAddress Service.UpdateApartmentPropertyAddress{propertyKey, newApartmentPropertyAddress} = do
      let requestUpdateApartmentPropertyAddressParams = UpdateApartmentPropertyAddress with ..
      updateApartmentPropertyAdressAux requestUpdateApartmentPropertyAddressParams

    updateApartmentPropertyPostalCode Service.UpdateApartmentPropertyPostalCode{propertyKey, newApartmentPropertyPostalCode} = do
      let requestUpdateApartmentPropertyPostalCodeParams = UpdateApartmentPropertyPostalCode with ..
      updateApartmentPropertyPostalCodeAux requestUpdateApartmentPropertyPostalCodeParams

    updateApartmentPropertyDistrict Service.UpdateApartmentPropertyDistrict{propertyKey, newApartmentPropertyDistrict} = do
      let requestUpdateApartmentPropertyDistrictParams = UpdateApartmentPropertyDistrict with ..
      updateApartmentPropertyDistrictAux requestUpdateApartmentPropertyDistrictParams

    updateApartmentPropertyCounty Service.UpdateApartmentPropertyCounty{propertyKey, newApartmentPropertyCounty} = do
      let requestUpdateApartmentPropertyCountyParams = UpdateApartmentPropertyCounty with ..
      updateApartmentPropertyCountyAux requestUpdateApartmentPropertyCountyParams

    updateApartmentGrossArea Service.UpdateApartmentGrossArea{propertyKey, newApartmentGrossArea} = do
      let requestUpdateApartmentGrossAreaParams = UpdateApartmentGrossArea with ..
      updateApartmentGrossAreaAux requestUpdateApartmentGrossAreaParams

    updateApartmentUsableArea Service.UpdateApartmentUsableArea{propertyKey, newApartmentUsableArea} = do
      let requestUpdateApartmentUsableAreaParams = UpdateApartmentUsableArea with ..
      updateApartmentUsableAreaAux requestUpdateApartmentUsableAreaParams

    updateApartmentBedrooms Service.UpdateApartmentBedrooms{propertyKey, newApartmentBedrooms} = do
      let requestUpdateApartmentBedroomsParams = UpdateApartmentBedrooms with ..
      updateApartmentBedroomsAux requestUpdateApartmentBedroomsParams

    updateApartmentBathrooms Service.UpdateApartmentBathrooms{propertyKey, newApartmentBathrooms} = do
      let requestUpdateApartmentBathroomsParams = UpdateApartmentBathrooms with ..
      updateApartmentBathroomsAux requestUpdateApartmentBathroomsParams

    updateApartmentFloor Service.UpdateApartmentFloor{propertyKey, newApartmentFloor} = do
      let requestUpdateApartmentFloorParams = UpdateApartmentFloor with ..
      updateApartmentFloorAux requestUpdateApartmentFloorParams

    updateApartmentParkingSpaces Service.UpdateApartmentParkingSpaces{propertyKey, newApartmentParkingSpaces} = do
      let requestUpdateApartmentParkingSpacesParams = UpdateApartmentParkingSpaces with ..
      updateApartmentParkingSpacesAux requestUpdateApartmentParkingSpacesParams

    updateApartmentElevator Service.UpdateApartmentElevator{propertyKey, newApartmentElevator} = do
      let requestUpdateApartmentElevatorParams = UpdateApartmentElevator with ..
      updateApartmentElevatorAux requestUpdateApartmentElevatorParams

    updateApartmentBuildDate Service.UpdateApartmentBuildDate{propertyKey, newApartmentBuildDate} = do
      let requestUpdateApartmentBuildDateParams = UpdateApartmentBuildDate with ..
      updateApartmentBuildDateAux requestUpdateApartmentBuildDateParams

    updateApartmentInstalledEquipment Service.UpdateApartmentInstalledEquipment{propertyKey, newApartmentInstalledEquipment} = do
      let requestUpdateApartmentInstalledEquipmentParams = UpdateApartmentInstalledEquipment with ..
      updateApartmentInstalledEquipmentAux requestUpdateApartmentInstalledEquipmentParams

    updateApartmentAdditionalInformation Service.UpdateApartmentAdditionalInformation{propertyKey, newApartmentAdditionalInformation} = do
      let requestUpdateApartmentAdditionalInformationParams = UpdateApartmentAdditionalInformation with ..
      updateApartmentAdditionalInformationAux requestUpdateApartmentAdditionalInformationParams

    updateApartmentDescription Service.UpdateApartmentDescription{propertyKey, newApartmentDescription} = do
      let requestUpdateApartmentDescriptionParams = UpdateApartmentDescription with ..
      updateApartmentDescriptionAux requestUpdateApartmentDescriptionParams

-------------------------------------------------------

    requestCreateLandProperty Service.RequestCreateLandProperty{id,landInstrument,propertyAddress,propertyPostalCode,propertyDistrict,propertyCounty,landType,totalLandArea,minimumSurfaceForSale,buildableArea,buildableFloors,accessByRoad,installedEquipment,viableConstructionTypes,additionalInformation,description,observers} = do
      let requestCreateLandPropertyParams = CreateLandPropertyRequest with permission = MANAGE_ROLE, ..
      requestCreateLandPropertyAux requestCreateLandPropertyParams

    createLandProperty Service.CreateLandProperty{createLandPropertyRequest} = do
      let createLandPropertyParams = CreateLandProperty with ..
      createLandPropertyAux createLandPropertyParams
    
    updateLandInstrumentKey Service.UpdateLandInstrumentKey{propertyKey, newLandInstrumentKey} = do
      let requestUpdateLandInstrumentKeyParams = UpdateLandInstrumentKey with ..
      updateLandInstrumentKeyAux requestUpdateLandInstrumentKeyParams

    updateLandPropertyAddress Service.UpdateLandPropertyAddress{propertyKey, newLandPropertyAddress} = do
      let requestUpdateLandPropertyAddressParams = UpdateLandPropertyAddress with ..
      updateLandPropertyAdressAux requestUpdateLandPropertyAddressParams

    updateLandPropertyPostalCode Service.UpdateLandPropertyPostalCode{propertyKey, newLandPropertyPostalCode} = do
      let requestUpdateLandPropertyPostalCodeParams = UpdateLandPropertyPostalCode with ..
      updateLandPropertyPostalCodeAux requestUpdateLandPropertyPostalCodeParams

    updateLandPropertyDistrict Service.UpdateLandPropertyDistrict{propertyKey, newLandPropertyDistrict} = do
      let requestUpdateLandPropertyDistrictParams = UpdateLandPropertyDistrict with ..
      updateLandPropertyDistrictAux requestUpdateLandPropertyDistrictParams

    updateLandPropertyCounty Service.UpdateLandPropertyCounty{propertyKey, newLandPropertyCounty} = do
      let requestUpdateLandPropertyCountyParams = UpdateLandPropertyCounty with ..
      updateLandPropertyCountyAux requestUpdateLandPropertyCountyParams

    updateLandType Service.UpdateLandType{propertyKey, newLandType} = do
      let requestUpdateLandTypeParams = UpdateLandType with ..
      updateLandTypeAux requestUpdateLandTypeParams

    updateTotalLandArea Service.UpdateTotalLandArea{propertyKey, newTotalLandArea} = do
      let requestUpdateTotalLandAreaParams = UpdateTotalLandArea with ..
      updateTotalLandAreaAux requestUpdateTotalLandAreaParams

    updateMinimumSurfaceForSale Service.UpdateMinimumSurfaceForSale{propertyKey, newLandMinimumSurfaceForSale} = do
      let requestUpdateLandMinimumSurfaceForSaleParams = UpdateLandMinimumSurfaceForSale with ..
      updateLandMinimumSurfaceForSaleAux requestUpdateLandMinimumSurfaceForSaleParams

    updateLandBuildableArea Service.UpdateLandBuildableArea{propertyKey, newLandBuildableArea} = do
      let requestUpdateLandBuildableAreaParams = UpdateLandBuildableArea with ..
      updateLandBuildableAreaAux requestUpdateLandBuildableAreaParams

    updateLandBuildableFloors Service.UpdateLandBuildableFloors{propertyKey, newLandBuildableFloors} = do
      let requestUpdateLandBuildableFloorsParams = UpdateLandBuildableFloors with ..
      updateLandBuildableFloorsAux requestUpdateLandBuildableFloorsParams

    updateLandAccessByRoad Service.UpdateLandAccessByRoad{propertyKey, newLandAccessByRoad} = do
      let requestUpdateLandAccessByRoadParams = UpdateLandAccessByRoad with ..
      updateLandAccessByRoadAux requestUpdateLandAccessByRoadParams

    updateLandInstalledEquipment Service.UpdateLandInstalledEquipment{propertyKey, newLandInstalledEquipment} = do
      let requestUpdateLandInstalledEquipmentParams = UpdateLandInstalledEquipment with ..
      updateLandInstalledEquipmentAux requestUpdateLandInstalledEquipmentParams

    updateLandViableConstructionTypes Service.UpdateLandViableConstructionTypes{propertyKey, newLandViableConstructionTypes} = do
      let requestUpdateLandViableConstructionTypesParams = UpdateLandViableConstructionTypes with ..
      updateLandViableConstructionTypesAux requestUpdateLandViableConstructionTypesParams

    updateLandAdditionalInformation Service.UpdateLandAdditionalInformation{propertyKey, newLandAdditionalInformation} = do
      let requestUpdateLandAdditionalInformationParams = UpdateLandAdditionalInformation with ..
      updateLandAdditionalInformationAux requestUpdateLandAdditionalInformationParams

    updateLandDescription Service.UpdateLandDescription{propertyKey, newLandDescription} = do
      let requestUpdateLandDescriptionParams = UpdateLandDescription with ..
      updateLandDescriptionAux requestUpdateLandDescriptionParams

-------------------------------------------------------
    
    requestCreateResidenceProperty Service.RequestCreateResidenceProperty{id,residenceInstrument,propertyAddress,propertyPostalCode,propertyDistrict,propertyCounty,grossArea,usableArea,bedrooms,bathrooms,floors,residenceType,backyard,parking,buildDate,orientation,installedEquipment,additionalInformation,description,observers} = do
      let requestCreateResidencePropertyParams = CreateResidencePropertyRequest with permission = MANAGE_ROLE, ..
      requestCreateResidencePropertyAux requestCreateResidencePropertyParams

    createResidenceProperty Service.CreateResidenceProperty{createResidencePropertyRequest} = do
      let createResidencePropertyParams = CreateResidenceProperty with ..
      createResidencePropertyAux createResidencePropertyParams
    
    updateResidenceInstrumentKey Service.UpdateResidenceInstrumentKey{propertyKey, newResidenceInstrumentKey} = do
      let requestUpdateResidenceInstrumentKeyParams = UpdateResidenceInstrumentKey with ..
      updateResidenceInstrumentKeyAux requestUpdateResidenceInstrumentKeyParams

    updateResidencePropertyAddress Service.UpdateResidencePropertyAddress{propertyKey, newResidencePropertyAddress} = do
      let requestUpdateResidencePropertyAddressParams = UpdateResidencePropertyAddress with ..
      updateResidencePropertyAddressAux requestUpdateResidencePropertyAddressParams

    updateResidencePropertyPostalCode Service.UpdateResidencePropertyPostalCode{propertyKey, newResidencePropertyPostalCode} = do
      let requestUpdateResidencePropertyPostalCodeParams = UpdateResidencePropertyPostalCode with ..
      updateResidencePropertyPostalCodeAux requestUpdateResidencePropertyPostalCodeParams

    updateResidencePropertyDistrict Service.UpdateResidencePropertyDistrict{propertyKey, newResidencePropertyDistrict} = do
      let requestUpdateResidencePropertyDistrictParams = UpdateResidencePropertyDistrict with ..
      updateResidencePropertyDistrictAux requestUpdateResidencePropertyDistrictParams

    updateResidencePropertyCounty Service.UpdateResidencePropertyCounty{propertyKey, newResidencePropertyCounty} = do
      let requestUpdateResidencePropertyCountyParams = UpdateResidencePropertyCounty with ..
      updateResidencePropertyCountyAux requestUpdateResidencePropertyCountyParams

    updateResidenceGrossArea Service.UpdateResidenceGrossArea{propertyKey, newResidenceGrossArea} = do
      let requestUpdateResidenceGrossAreaParams = UpdateResidenceGrossArea with ..
      updateResidenceGrossAreaAux requestUpdateResidenceGrossAreaParams

    updateResidenceUsableArea Service.UpdateResidenceUsableArea{propertyKey, newResidenceUsableArea} = do
      let requestUpdateResidenceUsableAreaParams = UpdateResidenceUsableArea with ..
      updateResidenceUsableAreaAux requestUpdateResidenceUsableAreaParams

    updateResidenceBedrooms Service.UpdateResidenceBedrooms{propertyKey, newResidenceBedrooms} = do
      let requestUpdateResidenceBedroomsParams = UpdateResidenceBedrooms with ..
      updateResidenceBedroomsAux requestUpdateResidenceBedroomsParams

    updateResidenceBathrooms Service.UpdateResidenceBathrooms{propertyKey, newResidenceBathrooms} = do
      let requestUpdateResidenceBathroomsParams = UpdateResidenceBathrooms with ..
      updateResidenceBathroomsAux requestUpdateResidenceBathroomsParams

    updateResidenceFloors Service.UpdateResidenceFloors{propertyKey, newResidenceFloors} = do
      let requestUpdateResidenceFloorsParams = UpdateResidenceFloors with ..
      updateResidenceFloorsAux requestUpdateResidenceFloorsParams

    updateResidenceType Service.UpdateResidenceType{propertyKey, newResidenceType} = do
      let requestUpdateResidenceTypeParams = UpdateResidenceType with ..
      updateResidenceTypeAux requestUpdateResidenceTypeParams

    updateResidenceBackyard Service.UpdateResidenceBackyard{propertyKey, newResidenceBackyardDescription} = do
      let requestUpdateResidenceBackyardParams = UpdateResidenceBackyard with ..
      updateResidenceBackyardAux requestUpdateResidenceBackyardParams

    updateResidenceParking Service.UpdateResidenceParking{propertyKey, newResidenceParking} = do
      let requestUpdateResidenceParkingParams = UpdateResidenceParking with ..
      updateResidenceParkingAux requestUpdateResidenceParkingParams

    updateResidenceBuildDate Service.UpdateResidenceBuildDate{propertyKey, newResidenceBuildDate} = do
      let requestUpdateResidenceBuildDateParams = UpdateResidenceBuildDate with ..
      updateResidenceBuildDateAux requestUpdateResidenceBuildDateParams

    updateResidenceOrientation Service.UpdateResidenceOrientation{propertyKey, newResidenceOrientation} = do
      let requestUpdateResidenceOrientationParams = UpdateResidenceOrientation with ..
      updateResidenceOrientationAux requestUpdateResidenceOrientationParams

    updateResidenceInstalledEquipment Service.UpdateResidenceInstalledEquipment{propertyKey, newResidenceInstalledEquipment} = do
      let requestUpdateResidenceInstalledEquipmentParams = UpdateResidenceInstalledEquipment with ..
      updateResidenceInstalledEquipmentAux requestUpdateResidenceInstalledEquipmentParams

    updateResidenceAdditionalInformation Service.UpdateResidenceAdditionalInformation{propertyKey, newResidenceAdditionalInformation} = do
      let requestUpdateResidenceAdditionalInformationParams = UpdateResidenceAdditionalInformation with ..
      updateResidenceAdditionalInformationAux requestUpdateResidenceAdditionalInformationParams

    updateResidenceDescription Service.UpdateResidenceDescription{propertyKey, newResidenceDescription} = do
      let requestUpdateResidenceDescriptionParams = UpdateResidenceDescription with ..
      updateResidenceDescriptionAux requestUpdateResidenceDescriptionParams

---------------------

    requestCreateGarageProperty Service.RequestCreateGarageProperty{id,garageInstrument,propertyAddress,propertyPostalCode,propertyDistrict,propertyCounty,garageArea,garageType,vehicleCapacity,installedEquipment,additionalInformation,description,observers} = do
      let requestCreateGaragePropertyParams = CreateGaragePropertyRequest with permission = MANAGE_ROLE, ..
      requestCreateGaragePropertyAux requestCreateGaragePropertyParams

    createGarageProperty Service.CreateGarageProperty{createGaragePropertyRequest} = do
      let createGaragePropertyParams = CreateGarageProperty with ..
      createGaragePropertyAux createGaragePropertyParams
    
    updateGarageInstrumentKey Service.UpdateGarageInstrumentKey{propertyKey, newGarageInstrumentKey} = do
      let requestUpdateGarageInstrumentKeyParams = UpdateGarageInstrumentKey with ..
      updateGarageInstrumentKeyAux requestUpdateGarageInstrumentKeyParams

    updateGaragePropertyAddress Service.UpdateGaragePropertyAddress{propertyKey, newGaragePropertyAddress} = do
      let requestUpdateGaragePropertyAddressParams = UpdateGaragePropertyAddress with ..
      updateGaragePropertyAddressAux requestUpdateGaragePropertyAddressParams

    updateGaragePropertyPostalCode Service.UpdateGaragePropertyPostalCode{propertyKey, newGaragePropertyPostalCode} = do
      let requestUpdateGaragePropertyPostalCodeParams = UpdateGaragePropertyPostalCode with ..
      updateGaragePropertyPostalCodeAux requestUpdateGaragePropertyPostalCodeParams

    updateGaragePropertyDistrict Service.UpdateGaragePropertyDistrict{propertyKey, newGaragePropertyDistrict} = do
      let requestUpdateGaragePropertyDistrictParams = UpdateGaragePropertyDistrict with ..
      updateGaragePropertyDistrictAux requestUpdateGaragePropertyDistrictParams

    updateGaragePropertyCounty Service.UpdateGaragePropertyCounty{propertyKey, newGaragePropertyCounty} = do
      let requestUpdateGaragePropertyCountyParams = UpdateGaragePropertyCounty with ..
      updateGaragePropertyCountyAux requestUpdateGaragePropertyCountyParams

    updateGarageArea Service.UpdateGarageArea{propertyKey, newGarageArea} = do
      let requestUpdateGarageAreaParams = UpdateGarageArea with ..
      updateGarageAreaAux requestUpdateGarageAreaParams

    updateGarageType Service.UpdateGarageType{propertyKey, newGarageType} = do
      let requestUpdateGarageTypeParams = UpdateGarageType with ..
      updateGarageTypeAux requestUpdateGarageTypeParams

    updateVehicleCapacity Service.UpdateVehicleCapacity{propertyKey, newVehicleCapacity} = do
      let requestUpdateVehicleCapacityParams = UpdateVehicleCapacity with ..
      updateVehicleCapacityAux requestUpdateVehicleCapacityParams

    updateGarageInstalledEquipment Service.UpdateGarageInstalledEquipment{propertyKey, newGarageInstalledEquipment} = do
      let requestUpdateGarageInstalledEquipmentParams = UpdateGarageInstalledEquipment with ..
      updateGarageInstalledEquipmentAux requestUpdateGarageInstalledEquipmentParams

    updateGarageAdditionalInformation Service.UpdateGarageAdditionalInformation{propertyKey, newGarageAdditionalInformation} = do
      let requestUpdateGarageAdditionalInformationParams = UpdateGarageAdditionalInformation with ..
      updateGarageAdditionalInformationAux requestUpdateGarageAdditionalInformationParams

    updateGarageDescription Service.UpdateGarageDescription{propertyKey, newGarageDescription} = do
      let requestUpdateGarageDescriptionParams = UpdateGarageDescription with ..
      updateGarageDescriptionAux requestUpdateGarageDescriptionParams

-----------------------------------------------------------------------------------------

    requestCreateWarehouseProperty Service.RequestCreateWarehouseProperty{id,warehouseInstrument,propertyAddress,propertyPostalCode,propertyDistrict,propertyCounty,warehouseType,grossArea,usableArea,floors,buildDate,installedEquipment,additionalInformation,description,observers} = do
      let requestCreateWarehousePropertyParams = CreateWarehousePropertyRequest with permission = MANAGE_ROLE, ..
      requestCreateWarehousePropertyAux requestCreateWarehousePropertyParams

    createWarehouseProperty Service.CreateWarehouseProperty{createWarehousePropertyRequest} = do
      let createWarehousePropertyParams = CreateWarehouseProperty with ..
      createWarehousePropertyAux createWarehousePropertyParams
    
    updateWarehouseInstrumentKey Service.UpdateWarehouseInstrumentKey{propertyKey, newWarehouseInstrumentKey} = do
      let requestUpdateWarehouseInstrumentKeyParams = UpdateWarehouseInstrumentKey with ..
      updateWarehouseInstrumentKeyAux requestUpdateWarehouseInstrumentKeyParams

    updateWarehousePropertyAddress Service.UpdateWarehousePropertyAddress{propertyKey, newWarehousePropertyAddress} = do
      let requestUpdateWarehousePropertyAddressParams = UpdateWarehousePropertyAddress with ..
      updateWarehousePropertyAddressAux requestUpdateWarehousePropertyAddressParams

    updateWarehousePropertyPostalCode Service.UpdateWarehousePropertyPostalCode{propertyKey, newWarehousePropertyPostalCode} = do
      let requestUpdateWarehousePropertyPostalCodeParams = UpdateWarehousePropertyPostalCode with ..
      updateWarehousePropertyPostalCodeAux requestUpdateWarehousePropertyPostalCodeParams

    updateWarehousePropertyDistrict Service.UpdateWarehousePropertyDistrict{propertyKey, newWarehousePropertyDistrict} = do
      let requestUpdateWarehousePropertyDistrictParams = UpdateWarehousePropertyDistrict with ..
      updateWarehousePropertyDistrictAux requestUpdateWarehousePropertyDistrictParams

    updateWarehousePropertyCounty Service.UpdateWarehousePropertyCounty{propertyKey, newWarehousePropertyCounty} = do
      let requestUpdateWarehousePropertyCountyParams = UpdateWarehousePropertyCounty with ..
      updateWarehousePropertyCountyAux requestUpdateWarehousePropertyCountyParams

    updateWarehouseType Service.UpdateWarehouseType{propertyKey, newWarehouseType} = do
      let requestUpdateWarehouseTypeParams = UpdateWarehouseType with ..
      updateWarehouseTypeAux requestUpdateWarehouseTypeParams

    updateWarehouseGrossArea Service.UpdateWarehouseGrossArea{propertyKey, newWarehouseGrossArea} = do
      let requestUpdateWarehouseGrossAreaParams = UpdateWarehouseGrossArea with ..
      updateWarehouseGrossAreaAux requestUpdateWarehouseGrossAreaParams

    updateWarehouseUsableArea Service.UpdateWarehouseUsableArea{propertyKey, newWarehouseUsableArea} = do
      let requestUpdateWarehouseUsableAreaParams = UpdateWarehouseUsableArea with ..
      updateWarehouseUsableAreaAux requestUpdateWarehouseUsableAreaParams

    updateWarehouseFloors Service.UpdateWarehouseFloors{propertyKey, newWarehouseFloors} = do
      let requestUpdateWarehouseFloorsParams = UpdateWarehouseFloors with ..
      updateWarehouseFloorsAux requestUpdateWarehouseFloorsParams

    updateWarehouseBuildDate Service.UpdateWarehouseBuildDate{propertyKey, newWarehouseBuildDate} = do
      let requestUpdateWarehouseBuildDateParams = UpdateWarehouseBuildDate with ..
      updateWarehouseBuildDateAux requestUpdateWarehouseBuildDateParams

    updateWarehouseInstalledEquipment Service.UpdateWarehouseInstalledEquipment{propertyKey, newWarehouseInstalledEquipment} = do
      let requestUpdateWarehouseInstalledEquipmentParams = UpdateWarehouseInstalledEquipment with ..
      updateWarehouseInstalledEquipmentAux requestUpdateWarehouseInstalledEquipmentParams

    updateWarehouseAdditionalInformation Service.UpdateWarehouseAdditionalInformation{propertyKey, newWarehouseAdditionalInformation} = do
      let requestUpdateWarehouseAdditionalInformationParams = UpdateWarehouseAdditionalInformation with ..
      updateWarehouseAdditionalInformationAux requestUpdateWarehouseAdditionalInformationParams

    updateWarehouseDescription Service.UpdateWarehouseDescription{propertyKey, newWarehouseDescription} = do
      let requestUpdateWarehouseDescriptionParams = UpdateWarehouseDescription with ..
      updateWarehouseDescriptionAux requestUpdateWarehouseDescriptionParams

template Offer
  with
    operator : Party
    user : Party
    apartmentPropertyFactoryCid: ContractId ApartmentProperty.Factory
    landPropertyFactoryCid: ContractId LandProperty.Factory
    residencePropertyFactoryCid: ContractId ResidenceProperty.Factory
    garagePropertyFactoryCid: ContractId GarageProperty.Factory
    warehousePropertyFactoryCid: ContractId WarehouseProperty.Factory
  where
  signatory operator
  observer user

  interface instance Service.O for Offer where
    view = Service.OView with operator, user, apartmentPropertyFactoryCid, landPropertyFactoryCid, residencePropertyFactoryCid, garagePropertyFactoryCid, warehousePropertyFactoryCid

    accept Service.Accept = do
      toInterfaceContractId <$> create Service with operator, user, apartmentPropertyFactoryCid, landPropertyFactoryCid, residencePropertyFactoryCid, garagePropertyFactoryCid,warehousePropertyFactoryCid

    decline Service.Decline{} = do
      pure()

    withdraw Service.Withdraw{} = do
      pure()

template Request
  with
    operator : Party
    user : Party
  where
  signatory user
  observer operator

  interface instance Service.R for Request where
    view = Service.RView with operator,user

    approve Service.Approve{operator, apartmentPropertyFactoryCid, landPropertyFactoryCid, residencePropertyFactoryCid, garagePropertyFactoryCid, warehousePropertyFactoryCid} = do
      toInterfaceContractId <$> create Service with operator, user, apartmentPropertyFactoryCid, landPropertyFactoryCid, residencePropertyFactoryCid, garagePropertyFactoryCid, warehousePropertyFactoryCid

    reject Service.Reject{} = do
      pure()
      
    cancel Service.Cancel{} = do
      pure()
