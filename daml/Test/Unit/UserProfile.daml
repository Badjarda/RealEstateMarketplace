module Test.Unit.UserProfile where

import Prelude hiding (Scenario)
import Daml.Script
import DA.Map (fromList)
import DA.Set (singleton)
import DA.Date

import Test.Util.Update.Role (createOperatorRole, createRoleUser)
import Test.Util.Update.Service (createProfileManagerService)
import Test.Util.Update.Workflow (createInitialUserRole)
import Test.Util.Script.Workflow (createUserProfile, updateUserProfile)
import Test.Types (Fixture(..))
import Interface.ProfileManager.UserProfile.Common (Nationality(..), Gender(..))

import Daml.Finance.Interface.Types.Common.Types (Id(..))


template Scenario
  with
    parties : [Party]
  where
    signatory parties

    nonconsuming choice Setup : Fixture
      controller parties
      do
        let [marketplace, user, public] = parties

        createOperatorRole marketplace

        userRole <- createInitialUserRole marketplace public
        createRoleUser marketplace user userRole

        -- Create Services

        createProfileManagerService marketplace user 

        pure Fixture with instruments = []; accounts = []; holdings = []; services = []; roles = []

testCreateUserProfile : Script ()
testCreateUserProfile = do
  parties@[marketplace, user, public] <-
    mapA allocateParty ["Marketplace", "User", "Public"]
  Fixture{instruments; accounts; holdings; roles} <- submitMulti parties [] do createAndExerciseCmd (Scenario with parties) Setup

  let 
      single_observers = singleton marketplace
      observers = fromList [("Default", single_observers)]
      id = Id "Custom User Profile"

  userProfileKey <- createUserProfile marketplace user public observers id "Username" "Duarte" "Costa" "Duarte Ferreira da Costa" "password" (date 2001 Dec 19) (Some Male) Portuguese "duarte.ferreira.costa@tecnico.ulisboa.pt" (Some 912345678) 15122679 21235678 12345678910 [""] 

  pure()

testCreateAndModifyUserProfile : Script ()
testCreateAndModifyUserProfile = do
  parties@[marketplace, user, public] <-
    mapA allocateParty ["Marketplace", "User", "Public"]
  Fixture{instruments; accounts; holdings; roles} <- submitMulti parties [] do createAndExerciseCmd (Scenario with parties) Setup

  let 
      single_observers = singleton marketplace
      observers = fromList [("Default", single_observers)]
      id = Id "Custom User Profile"

  userProfileKey <- createUserProfile marketplace user public observers id "Username" "Duarte" "Costa" "Duarte Ferreira da Costa" "password" (date 2001 Dec 19) (Some Male) Portuguese "duarte.ferreira.costa@tecnico.ulisboa.pt" (Some 912345678) 15122679 21235678 12345678910 [""]
  updateUserProfile marketplace user public userProfileKey "Edit" "Edit" "Edit" "Edit Edit da Edit" "Edit" (date 2001 Jan 19) (Some Female) Bahamian "edit" (Some 111111111) 1111111 1111111 1111111 ["edit"]

  pure()
